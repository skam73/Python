# Задание 1
# Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа
# данных каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у
# пользователя, а указать явно, в программе.

print()
print('Задание 1: "Проверка типа данных"')

list = [2, 'string', 456, 45.3, None, False, 1+2j]

for element in list:
    print(f'Тип данных элемента {element} в списке: {type(element)}')




# Задание 2
# Для списка реализовать обмен значений соседних элементов. Значениями обмениваются 
# элементы с индексами 0 и 1, 2 и 3 и т. д. При нечётном количестве элементов последний 
# сохранить на своём месте. Для заполнения списка элементов нужно использовать функцию input().

print()
print('Задание 2: "Обмен значений соседних элементов списка"')

a = [i for i in input().split()]

for i in range(1, len(a), 2):
    a[i - 1], a[i] = a[i], a[i - 1]

print(*a)




# Задание 3
# Пользователь вводит месяц в виде целого числа от 1 до 12. 
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
# Напишите решения через list и dict.

print()
print('Задание 3: "К какому времени года относится месяц"')

month = int(input())

seasons = {0:'зима', 1:'весна', 2:'лето', 3:'осень', 4:'зима'}
if 1 <= month <= 12: 
    print(seasons[month//3])
else: 
    print('Ошибка')

seasons_array = ['зима', 'весна', 'лето', 'осень', 'зима']
if 1 <= month <= 12: 
    print(seasons_array[month//3])
else: 
    print('Ошибка')

seasons_dict = {
    'зима': (1, 2, 12), 
    'весна': (3, 4, 5),
    'лето': (6, 7, 8),
    'осень': (9, 10, 11)
}

for name, monthes in seasons_dict.items():
    if month in monthes:
        result = name
        break
print(result)




# Задание 4
# Пользователь вводит строку из нескольких слов, разделённых пробелами. 
# Вывести каждое слово с новой строки. Строки нужно пронумеровать. 
# Если слово длинное, выводить только первые 10 букв в слове.

print()
print('Задание 4: "Вывести каждое слово с новой строки. Строки нужно пронумеровать."')
list = input('Введите строку из нескольких слов, разделённых пробелами: ').split(' ')

for index, element in enumerate(list, 1):
    print(f'{index}. {element[:10:]}')





# Задание 5
# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. 
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, 
# то новый элемент с тем же значением должен разместиться после них.

# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

print()
print('Задание 5: «Рейтинг»')

list = [7, 5, 3, 3, 2]
a = int(input('Введите новый элемент рейтинга: '))
list.insert(min([len(list)]+[i for i, v in enumerate(list) if v < a]), a)
print (*list)




# Задание 6
# Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами, 
# то есть характеристиками товара: название, цена, количество, единица измерения. Структуру нужно сформировать программно, 
# запросив все данные у пользователя.
# Пример готовой структуры:

# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]

# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название. 
# Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:

# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
print()
print('Задание 6: «Аналитика о товарах»')

list_goods = []
count_goods = 1
while input("Хотите добавить товар? y/n: ") == 'y':
    list_goods.append( (count_goods, {   
        'название': input('Введите название товара: '),
        'цена': input('Введите цену товара: '),
        'количество': input('Введите количество товара: '),
        'ед': input('Введите единицы товара, например шт., уп.: ')}))
    count_goods +=1
    print()
#print(list_goods)


analitics = {}
for good in list_goods:
    for feature_key, feature_value in good[1].items():
        if feature_key in analitics :
            if not feature_value in analitics[feature_key]:
                 analitics[feature_key].append(feature_value)
        else:
            analitics[feature_key] = [feature_value]
print()            
print("Аналитика о товарах")
print(analitics)